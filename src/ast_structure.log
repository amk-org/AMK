nd_program(2):  CHILD [nd_import_part, nd_proof_part, ]
	nd_import_part(1):  CHILD [nd_import_expr, ]
		nd_import_expr(0): module 'logics.proposition' CHILD []
	nd_proof_part(3):  CHILD [nd_proof_block, nd_proof_block, nd_proof_block, ]
		nd_proof_block(3): name 'belong' CHILD [nd_proof_req, nd_exprs, NULL, ]
			nd_proof_req(2):  CHILD [nd_of_exprs, nd_exprs, ]
				nd_of_exprs(2):  CHILD [nd_of_expr, nd_of_expr, ]
					nd_of_expr(1): var 'a' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
					nd_of_expr(1): var 'b' CHILD [nd_type, ]
						nd_type(1): type 'set' CHILD [nd_type, ]
							nd_type(0): type 'statement' CHILD []
				nd_exprs(0):  CHILD []
			nd_exprs(1):  CHILD [nd_expr, ]
				nd_expr(2): op 'op_get' CHILD [nd_expr, nd_expr, ]
					nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
						nd_expr(1): var 'a' CHILD [a, ]
						nd_expr(1): var 'b' CHILD [b, ]
					nd_expr(1): var 'a' CHILD [a, ]
		nd_proof_block(3): name 'belong2' CHILD [nd_proof_req, nd_exprs, nd_rich_exprs, ]
			nd_proof_req(2):  CHILD [nd_of_exprs, nd_exprs, ]
				nd_of_exprs(4):  CHILD [nd_of_expr, nd_of_expr, nd_of_expr, nd_of_expr, ]
					nd_of_expr(1): var 'a' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
					nd_of_expr(1): var 'b' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
					nd_of_expr(1): var 'c' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
					nd_of_expr(1): var 'd' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
				nd_exprs(0):  CHILD []
			nd_exprs(1):  CHILD [nd_expr, ]
				nd_expr(2): op 'op_get' CHILD [nd_expr, nd_expr, ]
					nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
						nd_expr(1): var 'a' CHILD [a, ]
						nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
							nd_expr(1): var 'b' CHILD [b, ]
							nd_expr(1): var 'c' CHILD [c, ]
					nd_expr(1): var 'c' CHILD [c, ]
			nd_rich_exprs(3):  CHILD [nd_rich_expr, nd_rich_expr, nd_rich_expr, ]
				nd_rich_expr(2): CHILD [nd_ref_body, 1]
					nd_expr(2): op 'op_get' CHILD [nd_expr, nd_expr, ]
						nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
							nd_expr(1): var 'a' CHILD [a, ]
							nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
								nd_expr(1): var 'b' CHILD [b, ]
								nd_expr(1): var 'c' CHILD [c, ]
						nd_expr(1): var 'a' CHILD [a, ]
					nd_ref_body(2): use 'belong' CHILD [a, (null), ]
				nd_rich_expr(2): CHILD [nd_ref_body, 2]
					nd_expr(2): op 'op_get' CHILD [nd_expr, nd_expr, ]
						nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
							nd_expr(1): var 'a' CHILD [a, ]
							nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
								nd_expr(1): var 'b' CHILD [b, ]
								nd_expr(2): op 'op_wedge' CHILD [nd_expr, nd_expr, ]
									nd_expr(1): var 'a' CHILD [a, ]
									nd_expr(1): var 'b' CHILD [b, ]
						nd_expr(2): op 'op_wedge' CHILD [nd_expr, nd_expr, ]
							nd_expr(1): var 'a' CHILD [a, ]
							nd_expr(1): var 'b' CHILD [b, ]
					nd_ref_body(2): use 'belong' CHILD [a, (null), ]
				nd_rich_expr(2): CHILD [nd_ref_body, 2]
					nd_expr(2): op 'op_get' CHILD [nd_expr, nd_expr, ]
						nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
							nd_expr(1): var 'a' CHILD [a, ]
							nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
								nd_expr(1): var 'b' CHILD [b, ]
								nd_expr(1): var 'c' CHILD [c, ]
						nd_expr(1): var 'c' CHILD [c, ]
					nd_ref_body(2): use 'belong' CHILD [a, (null), ]
		nd_proof_block(3): name 'belong3' CHILD [nd_proof_req, nd_exprs, nd_rich_exprs, ]
			nd_proof_req(2):  CHILD [nd_of_exprs, nd_exprs, ]
				nd_of_exprs(4):  CHILD [nd_of_expr, nd_of_expr, nd_of_expr, nd_of_expr, ]
					nd_of_expr(1): var 'x' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
					nd_of_expr(1): var 'y' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
					nd_of_expr(1): var 'z' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
					nd_of_expr(1): var 'p' CHILD [nd_type, ]
						nd_type(0): type 'statement' CHILD []
				nd_exprs(0):  CHILD []
			nd_exprs(1):  CHILD [nd_expr, ]
				nd_expr(2): op 'op_get' CHILD [nd_expr, nd_expr, ]
					nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
						nd_expr(1): var 'x' CHILD [x, ]
						nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
							nd_expr(1): var 'y' CHILD [y, ]
							nd_expr(1): var 'z' CHILD [z, ]
					nd_expr(1): var 'y' CHILD [y, ]
			nd_rich_exprs(1):  CHILD [nd_rich_expr, ]
				nd_rich_expr(2): CHILD [nd_ref_body, 2]
					nd_expr(2): op 'op_get' CHILD [nd_expr, nd_expr, ]
						nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
							nd_expr(1): var 'x' CHILD [x, ]
							nd_expr(2): op 'op_comma' CHILD [nd_expr, nd_expr, ]
								nd_expr(1): var 'y' CHILD [y, ]
								nd_expr(1): var 'z' CHILD [z, ]
						nd_expr(1): var 'y' CHILD [y, ]
					nd_ref_body(2): use 'belong2' CHILD [a, (null), ]
