!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AST_NODE_MALLOC	amk_ast.h	98;"	d
AST_NODE_PTR	amk_ast.h	103;"	d
AST_NODE_PTR_ARR	amk_ast.h	105;"	d
BEGIN	example/lex.yy.c	125;"	d	file:
BEGIN	lex.yy.c	125;"	d	file:
ECHO	example/lex.yy.c	556;"	d	file:
ECHO	lex.yy.c	704;"	d	file:
EOB_ACT_CONTINUE_SCAN	example/lex.yy.c	165;"	d	file:
EOB_ACT_CONTINUE_SCAN	lex.yy.c	165;"	d	file:
EOB_ACT_END_OF_FILE	example/lex.yy.c	166;"	d	file:
EOB_ACT_END_OF_FILE	lex.yy.c	166;"	d	file:
EOB_ACT_LAST_MATCH	example/lex.yy.c	167;"	d	file:
EOB_ACT_LAST_MATCH	lex.yy.c	167;"	d	file:
FLEXINT_H	example/lex.yy.c	29;"	d	file:
FLEXINT_H	lex.yy.c	29;"	d	file:
FLEX_BETA	example/lex.yy.c	13;"	d	file:
FLEX_BETA	lex.yy.c	13;"	d	file:
FLEX_SCANNER	example/lex.yy.c	8;"	d	file:
FLEX_SCANNER	lex.yy.c	8;"	d	file:
INITIAL	example/lex.yy.c	469;"	d	file:
INITIAL	lex.yy.c	617;"	d	file:
INT16_MAX	example/lex.yy.c	73;"	d	file:
INT16_MAX	lex.yy.c	73;"	d	file:
INT16_MIN	example/lex.yy.c	64;"	d	file:
INT16_MIN	lex.yy.c	64;"	d	file:
INT32_MAX	example/lex.yy.c	76;"	d	file:
INT32_MAX	lex.yy.c	76;"	d	file:
INT32_MIN	example/lex.yy.c	67;"	d	file:
INT32_MIN	lex.yy.c	67;"	d	file:
INT8_MAX	example/lex.yy.c	70;"	d	file:
INT8_MAX	lex.yy.c	70;"	d	file:
INT8_MIN	example/lex.yy.c	61;"	d	file:
INT8_MIN	lex.yy.c	61;"	d	file:
LEX	Makefile	/^LEX = $(NAME).lex$/;"	m
LEX	example/Makefile	/^LEX = $(NAME).lex$/;"	m
LEX	example_cpp/Makefile	/^LEX = $(NAME).lex$/;"	m
LINKS_MALLOC	amk_ast.h	107;"	d
LP	example/amk.tab.c	/^     LP = 261,$/;"	e	enum:yytokentype	file:
LP	example/amk.tab.c	81;"	d	file:
LP	example/amk.tab.h	/^     LP = 261,$/;"	e	enum:yytokentype
LP	example/amk.tab.h	54;"	d
NAME	Makefile	/^NAME = amk$/;"	m
NAME	example/Makefile	/^NAME = amk$/;"	m
NAME	example_cpp/Makefile	/^NAME = amk$/;"	m
NUM	example/amk.tab.c	/^     NUM = 258,$/;"	e	enum:yytokentype	file:
NUM	example/amk.tab.c	78;"	d	file:
NUM	example/amk.tab.h	/^     NUM = 258,$/;"	e	enum:yytokentype
NUM	example/amk.tab.h	51;"	d
OBJ	Makefile	/^OBJ = mycalc$/;"	m
OBJ	example/Makefile	/^OBJ = mycalc$/;"	m
OBJ	example_cpp/Makefile	/^OBJ = mycalc$/;"	m
OPA	example/amk.tab.c	/^     OPA = 259,$/;"	e	enum:yytokentype	file:
OPA	example/amk.tab.c	79;"	d	file:
OPA	example/amk.tab.h	/^     OPA = 259,$/;"	e	enum:yytokentype
OPA	example/amk.tab.h	52;"	d
OPM	example/amk.tab.c	/^     OPM = 260,$/;"	e	enum:yytokentype	file:
OPM	example/amk.tab.c	80;"	d	file:
OPM	example/amk.tab.h	/^     OPM = 260,$/;"	e	enum:yytokentype
OPM	example/amk.tab.h	53;"	d
REJECT	example/lex.yy.c	453;"	d	file:
REJECT	lex.yy.c	592;"	d	file:
RP	example/amk.tab.c	/^     RP = 262,$/;"	e	enum:yytokentype	file:
RP	example/amk.tab.c	82;"	d	file:
RP	example/amk.tab.h	/^     RP = 262,$/;"	e	enum:yytokentype
RP	example/amk.tab.h	55;"	d
STOP	example/amk.tab.c	/^     STOP = 263$/;"	e	enum:yytokentype	file:
STOP	example/amk.tab.c	83;"	d	file:
STOP	example/amk.tab.h	/^     STOP = 263$/;"	e	enum:yytokentype
STOP	example/amk.tab.h	56;"	d
UINT16_MAX	example/lex.yy.c	82;"	d	file:
UINT16_MAX	lex.yy.c	82;"	d	file:
UINT32_MAX	example/lex.yy.c	85;"	d	file:
UINT32_MAX	lex.yy.c	85;"	d	file:
UINT8_MAX	example/lex.yy.c	79;"	d	file:
UINT8_MAX	lex.yy.c	79;"	d	file:
VOID	amk.tab.c	/^  void * VOID;$/;"	m	union:YYSTYPE	file:
VOID	amk.tab.h	/^  void * VOID;$/;"	m	union:YYSTYPE
YACC	Makefile	/^YACC = $(NAME).y$/;"	m
YACC	example/Makefile	/^YACC = $(NAME).y$/;"	m
YACC	example_cpp/Makefile	/^YACC = $(NAME).ypp$/;"	m
YYABORT	amk.tab.c	635;"	d	file:
YYABORT	example/amk.tab.c	527;"	d	file:
YYACCEPT	amk.tab.c	634;"	d	file:
YYACCEPT	example/amk.tab.c	526;"	d	file:
YYBACKUP	amk.tab.c	647;"	d	file:
YYBACKUP	example/amk.tab.c	539;"	d	file:
YYBISON	amk.tab.c	47;"	d	file:
YYBISON	example/amk.tab.c	47;"	d	file:
YYBISON_VERSION	amk.tab.c	50;"	d	file:
YYBISON_VERSION	example/amk.tab.c	50;"	d	file:
YYCOPY	amk.tab.c	360;"	d	file:
YYCOPY	amk.tab.c	363;"	d	file:
YYCOPY	example/amk.tab.c	322;"	d	file:
YYCOPY	example/amk.tab.c	325;"	d	file:
YYDEBUG	amk.tab.c	142;"	d	file:
YYDEBUG	example/amk.tab.c	105;"	d	file:
YYDPRINTF	amk.tab.c	727;"	d	file:
YYDPRINTF	amk.tab.c	873;"	d	file:
YYDPRINTF	example/amk.tab.c	619;"	d	file:
YYDPRINTF	example/amk.tab.c	765;"	d	file:
YYEMPTY	amk.tab.c	631;"	d	file:
YYEMPTY	example/amk.tab.c	523;"	d	file:
YYEOF	amk.tab.c	632;"	d	file:
YYEOF	example/amk.tab.c	524;"	d	file:
YYERRCODE	amk.tab.c	666;"	d	file:
YYERRCODE	example/amk.tab.c	558;"	d	file:
YYERROR	amk.tab.c	636;"	d	file:
YYERROR	example/amk.tab.c	528;"	d	file:
YYERROR_VERBOSE	amk.tab.c	147;"	d	file:
YYERROR_VERBOSE	amk.tab.c	148;"	d	file:
YYERROR_VERBOSE	amk.tab.c	150;"	d	file:
YYERROR_VERBOSE	example/amk.tab.c	110;"	d	file:
YYERROR_VERBOSE	example/amk.tab.c	111;"	d	file:
YYERROR_VERBOSE	example/amk.tab.c	113;"	d	file:
YYFAIL	amk.tab.c	643;"	d	file:
YYFAIL	example/amk.tab.c	535;"	d	file:
YYFINAL	amk.tab.c	393;"	d	file:
YYFINAL	example/amk.tab.c	355;"	d	file:
YYFPRINTF	amk.tab.c	724;"	d	file:
YYFPRINTF	example/amk.tab.c	616;"	d	file:
YYFREE	amk.tab.c	326;"	d	file:
YYFREE	example/amk.tab.c	288;"	d	file:
YYID	amk.tab.c	/^YYID (int i)$/;"	f	file:
YYID	amk.tab.c	250;"	d	file:
YYID	example/amk.tab.c	/^YYID (int i)$/;"	f	file:
YYID	example/amk.tab.c	212;"	d	file:
YYINITDEPTH	amk.tab.c	882;"	d	file:
YYINITDEPTH	example/amk.tab.c	774;"	d	file:
YYLAST	amk.tab.c	395;"	d	file:
YYLAST	example/amk.tab.c	357;"	d	file:
YYLEX	amk.tab.c	714;"	d	file:
YYLEX	amk.tab.c	716;"	d	file:
YYLEX	example/amk.tab.c	606;"	d	file:
YYLEX	example/amk.tab.c	608;"	d	file:
YYLLOC_DEFAULT	amk.tab.c	675;"	d	file:
YYLLOC_DEFAULT	example/amk.tab.c	567;"	d	file:
YYLSP_NEEDED	amk.tab.c	59;"	d	file:
YYLSP_NEEDED	example/amk.tab.c	59;"	d	file:
YYMALLOC	amk.tab.c	319;"	d	file:
YYMALLOC	example/amk.tab.c	281;"	d	file:
YYMAXDEPTH	amk.tab.c	893;"	d	file:
YYMAXDEPTH	example/amk.tab.c	785;"	d	file:
YYMAXUTOK	amk.tab.c	408;"	d	file:
YYMAXUTOK	example/amk.tab.c	370;"	d	file:
YYNNTS	amk.tab.c	400;"	d	file:
YYNNTS	example/amk.tab.c	362;"	d	file:
YYNRULES	amk.tab.c	402;"	d	file:
YYNRULES	example/amk.tab.c	364;"	d	file:
YYNSTATES	amk.tab.c	404;"	d	file:
YYNSTATES	example/amk.tab.c	366;"	d	file:
YYNTOKENS	amk.tab.c	398;"	d	file:
YYNTOKENS	example/amk.tab.c	360;"	d	file:
YYPACT_NINF	amk.tab.c	563;"	d	file:
YYPACT_NINF	example/amk.tab.c	483;"	d	file:
YYPOPSTACK	amk.tab.c	1231;"	d	file:
YYPOPSTACK	example/amk.tab.c	1123;"	d	file:
YYPURE	amk.tab.c	56;"	d	file:
YYPURE	example/amk.tab.c	56;"	d	file:
YYRECOVERING	amk.tab.c	645;"	d	file:
YYRECOVERING	example/amk.tab.c	537;"	d	file:
YYRHSLOC	amk.tab.c	673;"	d	file:
YYRHSLOC	example/amk.tab.c	565;"	d	file:
YYSIZE_MAXIMUM	amk.tab.c	227;"	d	file:
YYSIZE_MAXIMUM	example/amk.tab.c	189;"	d	file:
YYSIZE_T	amk.tab.c	215;"	d	file:
YYSIZE_T	amk.tab.c	217;"	d	file:
YYSIZE_T	amk.tab.c	221;"	d	file:
YYSIZE_T	amk.tab.c	223;"	d	file:
YYSIZE_T	example/amk.tab.c	177;"	d	file:
YYSIZE_T	example/amk.tab.c	179;"	d	file:
YYSIZE_T	example/amk.tab.c	183;"	d	file:
YYSIZE_T	example/amk.tab.c	185;"	d	file:
YYSKELETON_NAME	amk.tab.c	53;"	d	file:
YYSKELETON_NAME	example/amk.tab.c	53;"	d	file:
YYSTACK_ALLOC	amk.tab.c	273;"	d	file:
YYSTACK_ALLOC	amk.tab.c	277;"	d	file:
YYSTACK_ALLOC	amk.tab.c	282;"	d	file:
YYSTACK_ALLOC	amk.tab.c	305;"	d	file:
YYSTACK_ALLOC	example/amk.tab.c	235;"	d	file:
YYSTACK_ALLOC	example/amk.tab.c	239;"	d	file:
YYSTACK_ALLOC	example/amk.tab.c	244;"	d	file:
YYSTACK_ALLOC	example/amk.tab.c	267;"	d	file:
YYSTACK_ALLOC_MAXIMUM	amk.tab.c	302;"	d	file:
YYSTACK_ALLOC_MAXIMUM	amk.tab.c	308;"	d	file:
YYSTACK_ALLOC_MAXIMUM	example/amk.tab.c	264;"	d	file:
YYSTACK_ALLOC_MAXIMUM	example/amk.tab.c	270;"	d	file:
YYSTACK_BYTES	amk.tab.c	352;"	d	file:
YYSTACK_BYTES	example/amk.tab.c	314;"	d	file:
YYSTACK_FREE	amk.tab.c	296;"	d	file:
YYSTACK_FREE	amk.tab.c	306;"	d	file:
YYSTACK_FREE	example/amk.tab.c	258;"	d	file:
YYSTACK_FREE	example/amk.tab.c	268;"	d	file:
YYSTACK_GAP_MAXIMUM	amk.tab.c	348;"	d	file:
YYSTACK_GAP_MAXIMUM	example/amk.tab.c	310;"	d	file:
YYSTACK_RELOCATE	amk.tab.c	379;"	d	file:
YYSTACK_RELOCATE	example/amk.tab.c	341;"	d	file:
YYSTATE	example/lex.yy.c	132;"	d	file:
YYSTATE	lex.yy.c	132;"	d	file:
YYSTYPE	amk.tab.c	/^	YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	amk.tab.c	/^typedef union YYSTYPE$/;"	u	file:
YYSTYPE	amk.tab.h	/^	YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	amk.tab.h	/^typedef union YYSTYPE$/;"	u
YYSTYPE	example/amk.tab.c	/^	YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	example/amk.tab.c	/^typedef union YYSTYPE$/;"	u	file:
YYSTYPE	example/amk.tab.h	/^	YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	example/amk.tab.h	/^typedef union YYSTYPE$/;"	u
YYSTYPE_IS_DECLARED	amk.tab.c	170;"	d	file:
YYSTYPE_IS_DECLARED	amk.tab.h	113;"	d
YYSTYPE_IS_DECLARED	example/amk.tab.c	132;"	d	file:
YYSTYPE_IS_DECLARED	example/amk.tab.h	72;"	d
YYSTYPE_IS_TRIVIAL	amk.tab.c	171;"	d	file:
YYSTYPE_IS_TRIVIAL	amk.tab.h	114;"	d
YYSTYPE_IS_TRIVIAL	example/amk.tab.c	133;"	d	file:
YYSTYPE_IS_TRIVIAL	example/amk.tab.h	73;"	d
YYTABLES_NAME	example/lex.yy.c	1778;"	d	file:
YYTABLES_NAME	lex.yy.c	2121;"	d	file:
YYTABLE_NINF	amk.tab.c	588;"	d	file:
YYTABLE_NINF	example/amk.tab.c	500;"	d	file:
YYTERROR	amk.tab.c	665;"	d	file:
YYTERROR	example/amk.tab.c	557;"	d	file:
YYTOKENTYPE	amk.tab.c	65;"	d	file:
YYTOKENTYPE	amk.tab.h	38;"	d
YYTOKENTYPE	example/amk.tab.c	65;"	d	file:
YYTOKENTYPE	example/amk.tab.h	38;"	d
YYTOKEN_TABLE	amk.tab.c	155;"	d	file:
YYTOKEN_TABLE	example/amk.tab.c	118;"	d	file:
YYTRANSLATE	amk.tab.c	410;"	d	file:
YYTRANSLATE	example/amk.tab.c	372;"	d	file:
YYUNDEFTOK	amk.tab.c	407;"	d	file:
YYUNDEFTOK	example/amk.tab.c	369;"	d	file:
YYUSE	amk.tab.c	243;"	d	file:
YYUSE	amk.tab.c	245;"	d	file:
YYUSE	example/amk.tab.c	205;"	d	file:
YYUSE	example/amk.tab.c	207;"	d	file:
YY_	amk.tab.c	233;"	d	file:
YY_	amk.tab.c	237;"	d	file:
YY_	example/amk.tab.c	195;"	d	file:
YY_	example/amk.tab.c	199;"	d	file:
YY_AT_BOL	example/lex.yy.c	331;"	d	file:
YY_AT_BOL	lex.yy.c	344;"	d	file:
YY_BREAK	example/lex.yy.c	635;"	d	file:
YY_BREAK	lex.yy.c	783;"	d	file:
YY_BUFFER_EOF_PENDING	example/lex.yy.c	247;"	d	file:
YY_BUFFER_EOF_PENDING	lex.yy.c	260;"	d	file:
YY_BUFFER_NEW	example/lex.yy.c	235;"	d	file:
YY_BUFFER_NEW	lex.yy.c	248;"	d	file:
YY_BUFFER_NORMAL	example/lex.yy.c	236;"	d	file:
YY_BUFFER_NORMAL	lex.yy.c	249;"	d	file:
YY_BUFFER_STATE	example/lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUFFER_STATE	lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	example/lex.yy.c	144;"	d	file:
YY_BUF_SIZE	lex.yy.c	144;"	d	file:
YY_CHAR	example/lex.yy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CHAR	lex.yy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	example/lex.yy.c	263;"	d	file:
YY_CURRENT_BUFFER	lex.yy.c	276;"	d	file:
YY_CURRENT_BUFFER_LVALUE	example/lex.yy.c	270;"	d	file:
YY_CURRENT_BUFFER_LVALUE	lex.yy.c	283;"	d	file:
YY_DECL	example/lex.yy.c	623;"	d	file:
YY_DECL	lex.yy.c	771;"	d	file:
YY_DECL_IS_OURS	example/lex.yy.c	619;"	d	file:
YY_DECL_IS_OURS	lex.yy.c	767;"	d	file:
YY_DO_BEFORE_ACTION	example/lex.yy.c	359;"	d	file:
YY_DO_BEFORE_ACTION	lex.yy.c	369;"	d	file:
YY_END_OF_BUFFER	example/lex.yy.c	367;"	d	file:
YY_END_OF_BUFFER	lex.yy.c	377;"	d	file:
YY_END_OF_BUFFER_CHAR	example/lex.yy.c	140;"	d	file:
YY_END_OF_BUFFER_CHAR	lex.yy.c	140;"	d	file:
YY_EXIT_FAILURE	example/lex.yy.c	1576;"	d	file:
YY_EXIT_FAILURE	lex.yy.c	1916;"	d	file:
YY_EXTRA_TYPE	example/lex.yy.c	480;"	d	file:
YY_EXTRA_TYPE	lex.yy.c	628;"	d	file:
YY_FATAL_ERROR	example/lex.yy.c	610;"	d	file:
YY_FATAL_ERROR	lex.yy.c	758;"	d	file:
YY_FLEX_MAJOR_VERSION	example/lex.yy.c	9;"	d	file:
YY_FLEX_MAJOR_VERSION	lex.yy.c	9;"	d	file:
YY_FLEX_MINOR_VERSION	example/lex.yy.c	10;"	d	file:
YY_FLEX_MINOR_VERSION	lex.yy.c	10;"	d	file:
YY_FLEX_SUBMINOR_VERSION	example/lex.yy.c	11;"	d	file:
YY_FLEX_SUBMINOR_VERSION	lex.yy.c	11;"	d	file:
YY_FLUSH_BUFFER	example/lex.yy.c	299;"	d	file:
YY_FLUSH_BUFFER	lex.yy.c	312;"	d	file:
YY_INPUT	example/lex.yy.c	563;"	d	file:
YY_INPUT	lex.yy.c	711;"	d	file:
YY_INT_ALIGNED	example/lex.yy.c	4;"	d	file:
YY_INT_ALIGNED	lex.yy.c	4;"	d	file:
YY_LESS_LINENO	example/lex.yy.c	169;"	d	file:
YY_LESS_LINENO	lex.yy.c	176;"	d	file:
YY_LOCATION_PRINT	amk.tab.c	701;"	d	file:
YY_LOCATION_PRINT	amk.tab.c	706;"	d	file:
YY_LOCATION_PRINT	example/amk.tab.c	593;"	d	file:
YY_LOCATION_PRINT	example/amk.tab.c	598;"	d	file:
YY_MORE_ADJ	example/lex.yy.c	455;"	d	file:
YY_MORE_ADJ	lex.yy.c	594;"	d	file:
YY_NEW_FILE	example/lex.yy.c	138;"	d	file:
YY_NEW_FILE	lex.yy.c	138;"	d	file:
YY_NULL	example/lex.yy.c	112;"	d	file:
YY_NULL	lex.yy.c	112;"	d	file:
YY_NUM_RULES	example/lex.yy.c	366;"	d	file:
YY_NUM_RULES	lex.yy.c	376;"	d	file:
YY_READ_BUF_SIZE	example/lex.yy.c	548;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	696;"	d	file:
YY_REDUCE_PRINT	amk.tab.c	863;"	d	file:
YY_REDUCE_PRINT	amk.tab.c	876;"	d	file:
YY_REDUCE_PRINT	example/amk.tab.c	755;"	d	file:
YY_REDUCE_PRINT	example/amk.tab.c	768;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	example/lex.yy.c	456;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	lex.yy.c	595;"	d	file:
YY_RULE_SETUP	example/lex.yy.c	638;"	d	file:
YY_RULE_SETUP	lex.yy.c	786;"	d	file:
YY_SC_TO_UI	example/lex.yy.c	119;"	d	file:
YY_SC_TO_UI	lex.yy.c	119;"	d	file:
YY_SKIP_YYWRAP	example/lex.yy.c	336;"	d	file:
YY_STACK_PRINT	amk.tab.c	825;"	d	file:
YY_STACK_PRINT	amk.tab.c	875;"	d	file:
YY_STACK_PRINT	example/amk.tab.c	717;"	d	file:
YY_STACK_PRINT	example/amk.tab.c	767;"	d	file:
YY_START	example/lex.yy.c	131;"	d	file:
YY_START	lex.yy.c	131;"	d	file:
YY_START_STACK_INCR	example/lex.yy.c	605;"	d	file:
YY_START_STACK_INCR	lex.yy.c	753;"	d	file:
YY_STATE_BUF_SIZE	example/lex.yy.c	149;"	d	file:
YY_STATE_BUF_SIZE	lex.yy.c	149;"	d	file:
YY_STATE_EOF	example/lex.yy.c	135;"	d	file:
YY_STATE_EOF	lex.yy.c	135;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	example/lex.yy.c	188;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	lex.yy.c	201;"	d	file:
YY_SYMBOL_PRINT	amk.tab.c	733;"	d	file:
YY_SYMBOL_PRINT	amk.tab.c	874;"	d	file:
YY_SYMBOL_PRINT	example/amk.tab.c	625;"	d	file:
YY_SYMBOL_PRINT	example/amk.tab.c	766;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	example/lex.yy.c	152;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	lex.yy.c	152;"	d	file:
YY_TYPEDEF_YY_SIZE_T	example/lex.yy.c	157;"	d	file:
YY_TYPEDEF_YY_SIZE_T	lex.yy.c	157;"	d	file:
YY_USER_ACTION	example/lex.yy.c	630;"	d	file:
YY_USER_ACTION	lex.yy.c	778;"	d	file:
YY_USE_CONST	example/lex.yy.c	100;"	d	file:
YY_USE_CONST	example/lex.yy.c	93;"	d	file:
YY_USE_CONST	lex.yy.c	100;"	d	file:
YY_USE_CONST	lex.yy.c	93;"	d	file:
_STDLIB_H	amk.tab.c	287;"	d	file:
_STDLIB_H	amk.tab.c	315;"	d	file:
_STDLIB_H	example/amk.tab.c	249;"	d	file:
_STDLIB_H	example/amk.tab.c	277;"	d	file:
__STDC_LIMIT_MACROS	example/lex.yy.c	39;"	d	file:
__STDC_LIMIT_MACROS	lex.yy.c	39;"	d	file:
alloca	amk.tab.c	280;"	d	file:
alloca	example/amk.tab.c	242;"	d	file:
amk_ast_h	amk_ast.h	8;"	d
ast_node	amk_ast.h	/^struct ast_node {$/;"	s
axiom	amk.tab.c	/^     axiom = 267,$/;"	e	enum:yytokentype	file:
axiom	amk.tab.c	107;"	d	file:
axiom	amk.tab.h	/^     axiom = 267,$/;"	e	enum:yytokentype
axiom	amk.tab.h	80;"	d
conclude	amk.tab.c	/^     conclude = 270,$/;"	e	enum:yytokentype	file:
conclude	amk.tab.c	110;"	d	file:
conclude	amk.tab.h	/^     conclude = 270,$/;"	e	enum:yytokentype
conclude	amk.tab.h	83;"	d
contain	amk.tab.c	/^     contain = 261,$/;"	e	enum:yytokentype	file:
contain	amk.tab.c	101;"	d	file:
contain	amk.tab.h	/^     contain = 261,$/;"	e	enum:yytokentype
contain	amk.tab.h	74;"	d
cur_tab	lex.yy.c	/^int cur_tab = 0;$/;"	v
data	amk_ast.h	/^	void * data;$/;"	m	struct:ast_node
dcontain	amk.tab.c	/^     dcontain = 260,$/;"	e	enum:yytokentype	file:
dcontain	amk.tab.c	100;"	d	file:
dcontain	amk.tab.h	/^     dcontain = 260,$/;"	e	enum:yytokentype
dcontain	amk.tab.h	73;"	d
dedent	amk.tab.c	/^     dedent = 280,$/;"	e	enum:yytokentype	file:
dedent	amk.tab.c	120;"	d	file:
dedent	amk.tab.h	/^     dedent = 280,$/;"	e	enum:yytokentype
dedent	amk.tab.h	93;"	d
dget	amk.tab.c	/^     dget = 258,$/;"	e	enum:yytokentype	file:
dget	amk.tab.c	98;"	d	file:
dget	amk.tab.h	/^     dget = 258,$/;"	e	enum:yytokentype
dget	amk.tab.h	71;"	d
exp	example/amk.y	/^exp: exp OPA term     { $$ = ($2 == '+' ? $1 + $3 : $1 - $3); }$/;"	l
expr	amk.y	/^expr: var {$/;"	l
exprs	amk.y	/^exprs: expr {$/;"	l
factor	example/amk.y	/^factor: NUM           { $$ = $1; }$/;"	l
file_name	amk.tab.c	/^     file_name = 281,$/;"	e	enum:yytokentype	file:
file_name	amk.tab.c	121;"	d	file:
file_name	amk.tab.h	/^     file_name = 281,$/;"	e	enum:yytokentype
file_name	amk.tab.h	94;"	d
flex_int16_t	example/lex.yy.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	example/lex.yy.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int16_t	lex.yy.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	lex.yy.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	example/lex.yy.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	example/lex.yy.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	example/lex.yy.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	example/lex.yy.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	example/lex.yy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	example/lex.yy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	example/lex.yy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	example/lex.yy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint64_t	example/lex.yy.c	/^typedef uint64_t flex_uint64_t;$/;"	t	file:
flex_uint64_t	lex.yy.c	/^typedef uint64_t flex_uint64_t;$/;"	t	file:
flex_uint8_t	example/lex.yy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	example/lex.yy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
free_ast_node	amk_ast.h	/^void free_ast_node(struct ast_node * node) {$/;"	f
get	amk.tab.c	/^     get = 259,$/;"	e	enum:yytokentype	file:
get	amk.tab.c	99;"	d	file:
get	amk.tab.h	/^     get = 259,$/;"	e	enum:yytokentype
get	amk.tab.h	72;"	d
identifier	amk.tab.c	/^     identifier = 282,$/;"	e	enum:yytokentype	file:
identifier	amk.tab.c	122;"	d	file:
identifier	amk.tab.h	/^     identifier = 282,$/;"	e	enum:yytokentype
identifier	amk.tab.h	95;"	d
import	amk.tab.c	/^     import = 265,$/;"	e	enum:yytokentype	file:
import	amk.tab.c	105;"	d	file:
import	amk.tab.h	/^     import = 265,$/;"	e	enum:yytokentype
import	amk.tab.h	78;"	d
import_expr	amk.y	/^import_expr: import file_name {$/;"	l
import_part	amk.y	/^import_part: {$/;"	l
indent	amk.tab.c	/^     indent = 279,$/;"	e	enum:yytokentype	file:
indent	amk.tab.c	119;"	d	file:
indent	amk.tab.h	/^     indent = 279,$/;"	e	enum:yytokentype
indent	amk.tab.h	92;"	d
keyword	lex.yy.c	/^int keyword = 0;$/;"	v
keywords	amk_ast.h	/^enum keywords {$/;"	g
kw_axiom	amk_ast.h	/^	kw_axiom,$/;"	e	enum:keywords
kw_conclude	amk_ast.h	/^	kw_conclude,$/;"	e	enum:keywords
kw_import	amk_ast.h	/^	kw_import,$/;"	e	enum:keywords
kw_lemma	amk_ast.h	/^	kw_lemma,$/;"	e	enum:keywords
kw_proof	amk_ast.h	/^	kw_proof,$/;"	e	enum:keywords
kw_require	amk_ast.h	/^	kw_require,$/;"	e	enum:keywords
kw_theorem	amk_ast.h	/^	kw_theorem,$/;"	e	enum:keywords
kw_where	amk_ast.h	/^	kw_where$/;"	e	enum:keywords
label	amk.tab.c	/^     label = 283$/;"	e	enum:yytokentype	file:
label	amk.tab.c	123;"	d	file:
label	amk.tab.h	/^     label = 283$/;"	e	enum:yytokentype
label	amk.tab.h	96;"	d
last_tab	lex.yy.c	/^int last_tab = 0;$/;"	v
left	lex.yy.c	/^int left = 0;$/;"	v
left_bracket	amk.tab.c	/^     left_bracket = 273,$/;"	e	enum:yytokentype	file:
left_bracket	amk.tab.c	113;"	d	file:
left_bracket	amk.tab.h	/^     left_bracket = 273,$/;"	e	enum:yytokentype
left_bracket	amk.tab.h	86;"	d
left_parren	amk.tab.c	/^     left_parren = 277,$/;"	e	enum:yytokentype	file:
left_parren	amk.tab.c	117;"	d	file:
left_parren	amk.tab.h	/^     left_parren = 277,$/;"	e	enum:yytokentype
left_parren	amk.tab.h	90;"	d
left_ref	amk.tab.c	/^     left_ref = 275,$/;"	e	enum:yytokentype	file:
left_ref	amk.tab.c	115;"	d	file:
left_ref	amk.tab.h	/^     left_ref = 275,$/;"	e	enum:yytokentype
left_ref	amk.tab.h	88;"	d
lemma	amk.tab.c	/^     lemma = 268,$/;"	e	enum:yytokentype	file:
lemma	amk.tab.c	108;"	d	file:
lemma	amk.tab.h	/^     lemma = 268,$/;"	e	enum:yytokentype
lemma	amk.tab.h	81;"	d
links	amk_ast.h	/^	struct ast_node ** links;$/;"	m	struct:ast_node	typeref:struct:ast_node::ast_node
main	amk.tab.c	/^int main()$/;"	f
main	example/amk.tab.c	/^int main()$/;"	f
main	lex.yy.c	/^int main (int argc, char **argv)$/;"	f
nd_expr	amk_ast.h	/^	nd_expr$/;"	e	enum:node_types
nd_exprs	amk_ast.h	/^	nd_exprs,$/;"	e	enum:node_types
nd_import_expr	amk_ast.h	/^	nd_import_expr,$/;"	e	enum:node_types
nd_import_part	amk_ast.h	/^	nd_import_part,$/;"	e	enum:node_types
nd_program	amk_ast.h	/^	nd_program,$/;"	e	enum:node_types
nd_proof_block	amk_ast.h	/^	nd_proof_block,$/;"	e	enum:node_types
nd_proof_block_dcl	amk_ast.h	/^	nd_proof_block_dcl, \/\/ declare$/;"	e	enum:node_types
nd_proof_part	amk_ast.h	/^	nd_proof_part,$/;"	e	enum:node_types
nd_ref_body	amk_ast.h	/^	nd_ref_body,$/;"	e	enum:node_types
nd_ref_vars	amk_ast.h	/^	nd_ref_vars,$/;"	e	enum:node_types
nd_rich_expr	amk_ast.h	/^	nd_rich_expr,$/;"	e	enum:node_types
nd_rich_exprs	amk_ast.h	/^	nd_rich_exprs,$/;"	e	enum:node_types
nd_var	amk_ast.h	/^	nd_var,$/;"	e	enum:node_types
new_ast_node	amk_ast.h	/^struct ast_node *new_ast_node(enum node_types node_type, void *arg, void *arg2, void *arg3) {$/;"	f
node_type	amk_ast.h	/^	enum node_types node_type;$/;"	m	struct:ast_node	typeref:enum:ast_node::node_types
node_types	amk_ast.h	/^enum node_types {$/;"	g
not	amk.tab.c	/^     not = 264,$/;"	e	enum:yytokentype	file:
not	amk.tab.c	104;"	d	file:
not	amk.tab.h	/^     not = 264,$/;"	e	enum:yytokentype
not	amk.tab.h	77;"	d
num_links	amk_ast.h	/^	int num_links;$/;"	m	struct:ast_node
op_contain	amk_ast.h	/^	op_contain,$/;"	e	enum:operators
op_dcontain	amk_ast.h	/^	op_dcontain,$/;"	e	enum:operators
op_dget	amk_ast.h	/^	op_dget$/;"	e	enum:operators
op_get	amk_ast.h	/^	op_get,$/;"	e	enum:operators
op_not	amk_ast.h	/^	op_not,$/;"	e	enum:operators
op_vee	amk_ast.h	/^	op_vee,$/;"	e	enum:operators
op_wedge	amk_ast.h	/^	op_wedge,$/;"	e	enum:operators
operators	amk_ast.h	/^enum operators {$/;"	g
program	amk.y	/^program: import_part proof_part {$/;"	l
proof	amk.tab.c	/^     proof = 271,$/;"	e	enum:yytokentype	file:
proof	amk.tab.c	111;"	d	file:
proof	amk.tab.h	/^     proof = 271,$/;"	e	enum:yytokentype
proof	amk.tab.h	84;"	d
proof_block	amk.y	/^proof_block: proof_head proof_req proof_con proof_body {$/;"	l
proof_body	amk.y	/^proof_body: proof ':' rich_exprs {$/;"	l
proof_con	amk.y	/^proof_con: conclude ':' exprs {$/;"	l
proof_head	amk.y	/^proof_head: theorem_pref identifier ':' {$/;"	l
proof_part	amk.y	/^proof_part: {$/;"	l
proof_req	amk.y	/^proof_req: require ':' exprs {$/;"	l
ptr	amk.tab.c	/^  struct ast_node *ptr;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::ast_node	file:
ptr	amk.tab.h	/^  struct ast_node *ptr;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::ast_node
ref_body	amk.y	/^ref_body: ref_pref ref_theo {$/;"	l
ref_pref	amk.y	/^ref_pref: theorem {$/;"	l
ref_theo	amk.y	/^ref_theo: identifier {$/;"	l
ref_vars	amk.y	/^ref_vars: var {$/;"	l
require	amk.tab.c	/^     require = 269,$/;"	e	enum:yytokentype	file:
require	amk.tab.c	109;"	d	file:
require	amk.tab.h	/^     require = 269,$/;"	e	enum:yytokentype
require	amk.tab.h	82;"	d
res	example/amk.y	/^res: exp STOP         { printf("%d\\n", $1); }$/;"	l
rich_expr	amk.y	/^rich_expr: expr { $/;"	l
rich_exprs	amk.y	/^rich_exprs: rich_expr {$/;"	l
right_bracket	amk.tab.c	/^     right_bracket = 274,$/;"	e	enum:yytokentype	file:
right_bracket	amk.tab.c	114;"	d	file:
right_bracket	amk.tab.h	/^     right_bracket = 274,$/;"	e	enum:yytokentype
right_bracket	amk.tab.h	87;"	d
right_parren	amk.tab.c	/^     right_parren = 278,$/;"	e	enum:yytokentype	file:
right_parren	amk.tab.c	118;"	d	file:
right_parren	amk.tab.h	/^     right_parren = 278,$/;"	e	enum:yytokentype
right_parren	amk.tab.h	91;"	d
right_ref	amk.tab.c	/^     right_ref = 276,$/;"	e	enum:yytokentype	file:
right_ref	amk.tab.c	116;"	d	file:
right_ref	amk.tab.h	/^     right_ref = 276,$/;"	e	enum:yytokentype
right_ref	amk.tab.h	89;"	d
run	example/amk.y	/^run: res run | res    \/* forces bison to process many stmts *\/$/;"	l
sfactor	example/amk.y	/^sfactor: OPA factor   { $$ = ($1 == '+' ? $2 : -$2); }$/;"	l
short	amk.tab.c	183;"	d	file:
short	example/amk.tab.c	145;"	d	file:
str	amk.tab.c	/^  char *str;$/;"	m	union:YYSTYPE	file:
str	amk.tab.h	/^  char *str;$/;"	m	union:YYSTYPE
sym	example/amk.tab.c	/^  char sym;$/;"	m	union:YYSTYPE	file:
sym	example/amk.tab.h	/^  char sym;$/;"	m	union:YYSTYPE
term	example/amk.y	/^term: term OPM factor { $$ = ($2 == '*' ? $1 * $3 : $1 \/ $3); }$/;"	l
theorem	amk.tab.c	/^     theorem = 266,$/;"	e	enum:yytokentype	file:
theorem	amk.tab.c	106;"	d	file:
theorem	amk.tab.h	/^     theorem = 266,$/;"	e	enum:yytokentype
theorem	amk.tab.h	79;"	d
theorem_pref	amk.y	/^theorem_pref: theorem {$/;"	l
theorem_ref	amk.y	/^theorem_ref: left_ref ref_body right_ref {$/;"	l
tmp_tab	lex.yy.c	/^int tmp_tab = 0;$/;"	v
unput	example/lex.yy.c	185;"	d	file:
unput	lex.yy.c	198;"	d	file:
val	example/amk.tab.c	/^  int val; $/;"	m	union:YYSTYPE	file:
val	example/amk.tab.h	/^  int val; $/;"	m	union:YYSTYPE
var	amk.y	/^var: identifier {$/;"	l
vee	amk.tab.c	/^     vee = 262,$/;"	e	enum:yytokentype	file:
vee	amk.tab.c	102;"	d	file:
vee	amk.tab.h	/^     vee = 262,$/;"	e	enum:yytokentype
vee	amk.tab.h	75;"	d
wedge	amk.tab.c	/^     wedge = 263,$/;"	e	enum:yytokentype	file:
wedge	amk.tab.c	103;"	d	file:
wedge	amk.tab.h	/^     wedge = 263,$/;"	e	enum:yytokentype
wedge	amk.tab.h	76;"	d
where	amk.tab.c	/^     where = 272,$/;"	e	enum:yytokentype	file:
where	amk.tab.c	112;"	d	file:
where	amk.tab.h	/^     where = 272,$/;"	e	enum:yytokentype
where	amk.tab.h	85;"	d
yy_accept	example/lex.yy.c	/^static yyconst flex_int16_t yy_accept[17] =$/;"	v	file:
yy_accept	lex.yy.c	/^static yyconst flex_int16_t yy_accept[103] =$/;"	v	file:
yy_at_bol	example/lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_at_bol	lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	example/lex.yy.c	/^static yyconst flex_int16_t yy_base[18] =$/;"	v	file:
yy_base	lex.yy.c	/^static yyconst flex_int16_t yy_base[108] =$/;"	v	file:
yy_bs_column	example/lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_column	lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	example/lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	example/lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	example/lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	example/lex.yy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack	lex.yy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	example/lex.yy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_max	lex.yy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	example/lex.yy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_stack_top	lex.yy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	example/lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_state	lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	example/lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_status	lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	example/lex.yy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_c_buf_p	lex.yy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	example/lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_ch_buf	lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	example/lex.yy.c	/^static yyconst flex_int16_t yy_chk[26] =$/;"	v	file:
yy_chk	lex.yy.c	/^static yyconst flex_int16_t yy_chk[434] =$/;"	v	file:
yy_create_buffer	example/lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_create_buffer	lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_def	example/lex.yy.c	/^static yyconst flex_int16_t yy_def[18] =$/;"	v	file:
yy_def	lex.yy.c	/^static yyconst flex_int16_t yy_def[108] =$/;"	v	file:
yy_delete_buffer	example/lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_delete_buffer	lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_did_buffer_switch_on_eof	example/lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_did_buffer_switch_on_eof	lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	example/lex.yy.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_ec	lex.yy.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	example/lex.yy.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fatal_error	lex.yy.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	example/lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_fill_buffer	lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	example/lex.yy.c	/^int yy_flex_debug = 0;$/;"	v
yy_flex_debug	lex.yy.c	/^int yy_flex_debug = 0;$/;"	v
yy_flex_strlen	example/lex.yy.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strlen	lex.yy.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	example/lex.yy.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flex_strncpy	lex.yy.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	example/lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_flush_buffer	lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_get_next_buffer	example/lex.yy.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_next_buffer	lex.yy.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	example/lex.yy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_get_previous_state	lex.yy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	example/lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_hold_char	lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	example/lex.yy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init	lex.yy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	example/lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_buffer	lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_globals	example/lex.yy.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_init_globals	lex.yy.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	example/lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_input_file	lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	example/lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	example/lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	example/lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_cpos	lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	example/lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_last_accepting_state	lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	example/lex.yy.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_load_buffer_state	lex.yy.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_meta	example/lex.yy.c	/^static yyconst flex_int32_t yy_meta[11] =$/;"	v	file:
yy_meta	lex.yy.c	/^static yyconst flex_int32_t yy_meta[41] =$/;"	v	file:
yy_n_chars	example/lex.yy.c	/^	yy_size_t yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	example/lex.yy.c	/^static yy_size_t yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_n_chars	lex.yy.c	/^	yy_size_t yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	lex.yy.c	/^static yy_size_t yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	example/lex.yy.c	309;"	d	file:
yy_new_buffer	lex.yy.c	322;"	d	file:
yy_nxt	example/lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	example/lex.yy.c	/^static yyconst flex_int16_t yy_nxt[26] =$/;"	v	file:
yy_nxt	lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	lex.yy.c	/^static yyconst flex_int16_t yy_nxt[434] =$/;"	v	file:
yy_reduce_print	amk.tab.c	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_reduce_print	example/amk.tab.c	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_rule_can_match_eol	lex.yy.c	/^static yyconst flex_int32_t yy_rule_can_match_eol[32] =$/;"	v	file:
yy_scan_buffer	example/lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_buffer	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_bytes	example/lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )$/;"	f
yy_scan_bytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )$/;"	f
yy_scan_string	example/lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f
yy_scan_string	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f
yy_set_bol	example/lex.yy.c	321;"	d	file:
yy_set_bol	lex.yy.c	334;"	d	file:
yy_set_interactive	example/lex.yy.c	311;"	d	file:
yy_set_interactive	lex.yy.c	324;"	d	file:
yy_size_t	example/lex.yy.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_size_t	lex.yy.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	amk.tab.c	/^yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)$/;"	f	file:
yy_stack_print	example/amk.tab.c	/^yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)$/;"	f	file:
yy_start	example/lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_start	lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	example/lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_state_type	lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	example/lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_switch_to_buffer	lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_symbol_print	amk.tab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_print	example/amk.tab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	amk.tab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	example/amk.tab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	example/lex.yy.c	/^struct yy_trans_info$/;"	s	file:
yy_trans_info	lex.yy.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	example/lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_try_NUL_trans	lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	example/lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yy_verify	lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	amk.tab.c	/^union yyalloc$/;"	u	file:
yyalloc	example/amk.tab.c	/^union yyalloc$/;"	u	file:
yyalloc	example/lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	f
yyalloc	lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	f
yychar	amk.tab.c	/^int yychar;$/;"	v
yychar	example/amk.tab.c	/^int yychar;$/;"	v
yycheck	amk.tab.c	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yycheck	example/amk.tab.c	/^static const yytype_uint8 yycheck[] =$/;"	v	file:
yyclearin	amk.tab.c	630;"	d	file:
yyclearin	example/amk.tab.c	522;"	d	file:
yyconst	example/lex.yy.c	106;"	d	file:
yyconst	example/lex.yy.c	108;"	d	file:
yyconst	lex.yy.c	106;"	d	file:
yyconst	lex.yy.c	108;"	d	file:
yydebug	amk.tab.c	/^int yydebug;$/;"	v
yydebug	example/amk.tab.c	/^int yydebug;$/;"	v
yydefact	amk.tab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefact	example/amk.tab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	amk.tab.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydefgoto	example/amk.tab.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydestruct	amk.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yydestruct	example/amk.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyensure_buffer_stack	example/lex.yy.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyensure_buffer_stack	lex.yy.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyerrok	amk.tab.c	629;"	d	file:
yyerrok	example/amk.tab.c	521;"	d	file:
yyerror	amk_ast.h	/^int yyerror(const char *p) {$/;"	f
yyerror	example/amk.tab.c	/^int yyerror(const char *p) { $/;"	f
yyfree	example/lex.yy.c	/^void yyfree (void * ptr )$/;"	f
yyfree	lex.yy.c	/^void yyfree (void * ptr )$/;"	f
yyget_debug	example/lex.yy.c	/^int yyget_debug  (void)$/;"	f
yyget_debug	lex.yy.c	/^int yyget_debug  (void)$/;"	f
yyget_in	example/lex.yy.c	/^FILE *yyget_in  (void)$/;"	f
yyget_in	lex.yy.c	/^FILE *yyget_in  (void)$/;"	f
yyget_leng	example/lex.yy.c	/^yy_size_t yyget_leng  (void)$/;"	f
yyget_leng	lex.yy.c	/^yy_size_t yyget_leng  (void)$/;"	f
yyget_lineno	example/lex.yy.c	/^int yyget_lineno  (void)$/;"	f
yyget_lineno	lex.yy.c	/^int yyget_lineno  (void)$/;"	f
yyget_out	example/lex.yy.c	/^FILE *yyget_out  (void)$/;"	f
yyget_out	lex.yy.c	/^FILE *yyget_out  (void)$/;"	f
yyget_text	example/lex.yy.c	/^char *yyget_text  (void)$/;"	f
yyget_text	lex.yy.c	/^char *yyget_text  (void)$/;"	f
yyin	example/lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyin	lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinput	example/lex.yy.c	/^    static int yyinput (void)$/;"	f	file:
yyinput	lex.yy.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	example/lex.yy.c	/^yy_size_t yyleng;$/;"	v
yyleng	lex.yy.c	/^yy_size_t yyleng;$/;"	v
yyless	example/lex.yy.c	1587;"	d	file:
yyless	example/lex.yy.c	1588;"	d	file:
yyless	example/lex.yy.c	172;"	d	file:
yyless	lex.yy.c	185;"	d	file:
yyless	lex.yy.c	1927;"	d	file:
yyless	lex.yy.c	1928;"	d	file:
yylex_destroy	example/lex.yy.c	/^int yylex_destroy  (void)$/;"	f
yylex_destroy	lex.yy.c	/^int yylex_destroy  (void)$/;"	f
yylineno	example/lex.yy.c	/^int yylineno = 1;$/;"	v
yylineno	lex.yy.c	/^int yylineno = 1;$/;"	v
yylval	amk.tab.c	/^YYSTYPE yylval;$/;"	v
yylval	example/amk.tab.c	/^YYSTYPE yylval;$/;"	v
yymore	example/lex.yy.c	454;"	d	file:
yymore	lex.yy.c	593;"	d	file:
yynerrs	amk.tab.c	/^int yynerrs;$/;"	v
yynerrs	example/amk.tab.c	/^int yynerrs;$/;"	v
yyout	example/lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyout	lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yypact	amk.tab.c	/^static const yytype_int8 yypact[] =$/;"	v	file:
yypact	example/amk.tab.c	/^static const yytype_int8 yypact[] =$/;"	v	file:
yyparse	amk.tab.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yyparse	example/amk.tab.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yypgoto	amk.tab.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yypgoto	example/amk.tab.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yypop_buffer_state	example/lex.yy.c	/^void yypop_buffer_state (void)$/;"	f
yypop_buffer_state	lex.yy.c	/^void yypop_buffer_state (void)$/;"	f
yyprhs	amk.tab.c	/^static const yytype_uint8 yyprhs[] =$/;"	v	file:
yyprhs	example/amk.tab.c	/^static const yytype_uint8 yyprhs[] =$/;"	v	file:
yypush_buffer_state	example/lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yypush_buffer_state	lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yyr1	amk.tab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr1	example/amk.tab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	amk.tab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyr2	example/amk.tab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	example/lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrealloc	lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	example/lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrestart	lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrhs	amk.tab.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrhs	example/amk.tab.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	amk.tab.c	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyrline	example/amk.tab.c	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyset_debug	example/lex.yy.c	/^void yyset_debug (int  bdebug )$/;"	f
yyset_debug	lex.yy.c	/^void yyset_debug (int  bdebug )$/;"	f
yyset_in	example/lex.yy.c	/^void yyset_in (FILE *  in_str )$/;"	f
yyset_in	lex.yy.c	/^void yyset_in (FILE *  in_str )$/;"	f
yyset_lineno	example/lex.yy.c	/^void yyset_lineno (int  line_number )$/;"	f
yyset_lineno	lex.yy.c	/^void yyset_lineno (int  line_number )$/;"	f
yyset_out	example/lex.yy.c	/^void yyset_out (FILE *  out_str )$/;"	f
yyset_out	lex.yy.c	/^void yyset_out (FILE *  out_str )$/;"	f
yyss	amk.tab.c	/^  yytype_int16 yyss;$/;"	m	union:yyalloc	file:
yyss	example/amk.tab.c	/^  yytype_int16 yyss;$/;"	m	union:yyalloc	file:
yystos	amk.tab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystos	example/amk.tab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	amk.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	amk.tab.c	925;"	d	file:
yystpcpy	example/amk.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	example/amk.tab.c	817;"	d	file:
yystrlen	amk.tab.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	amk.tab.c	902;"	d	file:
yystrlen	example/amk.tab.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	example/amk.tab.c	794;"	d	file:
yystype	amk.tab.c	169;"	d	file:
yystype	amk.tab.h	112;"	d
yystype	example/amk.tab.c	131;"	d	file:
yystype	example/amk.tab.h	71;"	d
yysyntax_error	amk.tab.c	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:
yysyntax_error	example/amk.tab.c	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:
yytable	amk.tab.c	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yytable	example/amk.tab.c	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yyterminate	example/lex.yy.c	600;"	d	file:
yyterminate	lex.yy.c	748;"	d	file:
yytext	example/lex.yy.c	/^char *yytext;$/;"	v
yytext	lex.yy.c	/^char *yytext;$/;"	v
yytext_ptr	example/lex.yy.c	349;"	d	file:
yytext_ptr	lex.yy.c	359;"	d	file:
yytname	amk.tab.c	/^static const char *const yytname[] =$/;"	v	file:
yytname	example/amk.tab.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	amk.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytnamerr	example/amk.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	amk.tab.c	/^   enum yytokentype {$/;"	g	file:
yytokentype	amk.tab.h	/^   enum yytokentype {$/;"	g
yytokentype	example/amk.tab.c	/^   enum yytokentype {$/;"	g	file:
yytokentype	example/amk.tab.h	/^   enum yytokentype {$/;"	g
yytoknum	amk.tab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytoknum	example/amk.tab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	amk.tab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytranslate	example/amk.tab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	amk.tab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	amk.tab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int16	example/amk.tab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	example/amk.tab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	amk.tab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	amk.tab.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	amk.tab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_int8	example/amk.tab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	example/amk.tab.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	example/amk.tab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	amk.tab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	amk.tab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint16	example/amk.tab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	example/amk.tab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	amk.tab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	amk.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yytype_uint8	example/amk.tab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	example/amk.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	example/lex.yy.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:
yyunput	lex.yy.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:
yyvs	amk.tab.c	/^  YYSTYPE yyvs;$/;"	m	union:yyalloc	file:
yyvs	example/amk.tab.c	/^  YYSTYPE yyvs;$/;"	m	union:yyalloc	file:
yywrap	example/lex.yy.c	335;"	d	file:
yywrap	lex.yy.c	/^int yywrap() { return 1; }$/;"	f
