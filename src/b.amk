

# asfas f


import logics.proposition  # asfsalkfjsakl

theorem belong:
	require:
		define a of statement
		define b of set[statement] 
	conclude:
		a,b|-a

theorem notCancellation:
	require:
		define a of statement
		define b of statement   # asf asklfj askl 
		define c of set[statement]
		not a,c |- b
		not a,c |- not b
	conclude:
		c |- a

theorem firstProof:
	require:
		define a of statement
		define b of statement
	conclude:
		a,not a, not b|-b
	proof:
		not b, a,not a|-a -[belong] <tt>
		not b, a,not a|-not a -[belong] <bb>
		a, not a, not b |- b -[theorem notCancellation: <tt> <x>] <cc>

theorem secondProof:
	require:
		define a of statement
		define b of statement
	conclude:
		not a, a |- b	
	proof:
		not b, not b, not a, a|- a -[belong] <tt>
		not b, not b, not a, a|- not a -[belong] <bb>
#		not b, not a, a |- b
		not b, not a, a |- not b -[belong] <cc>
		not a, a |- b -[theorem notCancellation: <x> <cc>] <dd>

